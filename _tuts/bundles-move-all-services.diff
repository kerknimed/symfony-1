diff --git a/app/config/services.yml b/app/config/services.yml
deleted file mode 100644
index 39f165d..0000000
--- a/app/config/services.yml
+++ /dev/null
@@ -1,52 +0,0 @@
-# Learn more about services, parameters and containers at
-# http://symfony.com/doc/current/book/service_container.html
-parameters:
-#    parameter_name: value
-
-services:
-    _defaults:
-        autowire: true
-        autoconfigure: true
-        public: false
-
-    # makes classes in src/AppBundle available to be used as services
-    # this creates a service per class whose id is the fully-qualified class name
-    AppBundle\:
-        resource: '../../src/AppBundle/*'
-        # you can exclude directories or files
-        # but if a service is unused, it's removed anyway
-        exclude: '../../src/AppBundle/{Entity,Repository}'
-
-    # controllers are imported separately to make sure they're public
-    # and have a tag that allows actions to type-hint services
-    AppBundle\Controller\:
-        resource: '../../src/AppBundle/Controller'
-        public: true
-        tags: ['controller.service_arguments']
-
-    # alias to allow this type to be autowired
-    Knp\Bundle\MarkdownBundle\MarkdownParserInterface: '@markdown.parser'
-    Doctrine\ORM\EntityManager: '@doctrine.orm.default_entity_manager'
-
-    AppBundle\Service\MarkdownTransformer:
-        arguments:
-            $cacheDriver: '@doctrine_cache.providers.my_markdown_cache'
-
-    AppBundle\Doctrine\HashPasswordListener:
-        tags: [doctrine.event_subscriber]
-
-    AppBundle\Form\TypeExtension\HelpFormExtension:
-        tags:
-            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType }
-
-    AppBundle\Service\MessageManager:
-        arguments:
-            - ['You can do it!', 'Dude, sweet!', 'Woot!']
-            - ['We are *never* going to figure this out', 'Why even try again?', 'Facepalm']
-
-    AppBundle\EventSubscriber\AddNiceHeaderEventSubscriber:
-        arguments:
-            $showDiscouragingMessage: true
-
-    # example of adding aliases, if one does not exist
-    # Symfony\Component\Security\Guard\GuardAuthenticatorHandler: '@security.authentication.guard_handler'
diff --git a/config/services.yaml b/config/services.yaml
index 7e1a1c6..9eae1ca 100644
--- a/config/services.yaml
+++ b/config/services.yaml
@@ -25,5 +25,43 @@ services:
         resource: '../src/Controller'
         tags: ['controller.service_arguments']
 
+    # REMOVE when AppBundle is removed
+    AppBundle\:
+        resource: '../src/AppBundle/*'
+        # you can exclude directories or files
+        # but if a service is unused, it's removed anyway
+        exclude: '../src/AppBundle/{Entity,Repository}'
+    AppBundle\Controller\:
+        resource: '../src/AppBundle/Controller'
+        public: true
+        tags: ['controller.service_arguments']
+    # END REMOVE
+
     # add more service definitions when explicit configuration is needed
     # please note that last definitions always *replace* previous ones
+
+    Knp\Bundle\MarkdownBundle\MarkdownParserInterface: '@markdown.parser'
+    Doctrine\ORM\EntityManager: '@doctrine.orm.default_entity_manager'
+
+    AppBundle\Service\MarkdownTransformer:
+        arguments:
+            $cacheDriver: '@doctrine_cache.providers.my_markdown_cache'
+
+    AppBundle\Doctrine\HashPasswordListener:
+        tags: [doctrine.event_subscriber]
+
+    AppBundle\Form\TypeExtension\HelpFormExtension:
+        tags:
+            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType }
+
+    AppBundle\Service\MessageManager:
+        arguments:
+            - ['You can do it!', 'Dude, sweet!', 'Woot!']
+            - ['We are *never* going to figure this out', 'Why even try again?', 'Facepalm']
+
+    AppBundle\EventSubscriber\AddNiceHeaderEventSubscriber:
+        arguments:
+            $showDiscouragingMessage: true
+
+    # example of adding aliases, if one does not exist
+    # Symfony\Component\Security\Guard\GuardAuthenticatorHandler: '@security.authentication.guard_handler'
